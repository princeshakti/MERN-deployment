{"ast":null,"code":"var _jsxFileName = \"/Users/princeshakti/Desktop/project_mern_memories-PART_1_and_2/client/src/components/Form/StepOne.js\";\nimport React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport useStyles from \"./styles\"; // creating functional component ans getting props from app.js and destucturing them\n\nconst StepOne = ({\n  nextStep,\n  postData,\n  setPostData\n}) => {\n  //creating error state for validation\n  const classes = useStyles(); // after form submit validating the form data using validator\n\n  const submitFormData = e => {\n    e.preventDefault();\n    console.log(\"next\"); // checking if value of first name and last name is empty show error else take to step 2\n\n    nextStep();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: submitFormData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    variant: \"outlined\",\n    label: \"Name\",\n    fullWidth: true,\n    value: postData.name,\n    onChange: e => setPostData({ ...postData,\n      name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"dob\",\n    variant: \"outlined\",\n    label: \"Date of Birth\",\n    fullWidth: true,\n    value: postData.dob,\n    onChange: e => setPostData({ ...postData,\n      dob: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"location\",\n    variant: \"outlined\",\n    label: \"Location\",\n    fullWidth: true,\n    value: postData.location,\n    onChange: e => setPostData({ ...postData,\n      location: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"team\",\n    variant: \"outlined\",\n    label: \"Team\",\n    fullWidth: true,\n    value: postData.team,\n    onChange: e => setPostData({ ...postData,\n      team: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Continue\")));\n};\n\nexport default StepOne;","map":{"version":3,"sources":["/Users/princeshakti/Desktop/project_mern_memories-PART_1_and_2/client/src/components/Form/StepOne.js"],"names":["React","useState","TextField","Button","Typography","Paper","useStyles","StepOne","nextStep","postData","setPostData","classes","submitFormData","e","preventDefault","console","log","paper","root","form","name","target","value","dob","location","team","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\n// creating functional component ans getting props from app.js and destucturing them\nconst StepOne = ({ nextStep, postData, setPostData }) => {\n  //creating error state for validation\n  const classes = useStyles();\n  // after form submit validating the form data using validator\n  const submitFormData = (e) => {\n    e.preventDefault();\n    console.log(\"next\");\n    // checking if value of first name and last name is empty show error else take to step 2\n\n    nextStep();\n  };\n\n  return (\n    <div>\n      <Paper className={classes.paper}>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          className={`${classes.root} ${classes.form}`}\n          onSubmit={submitFormData}\n        >\n          {/* <Typography variant=\"h6\">\n            {currentId ? `Editing \"${post.name}\"` : \"Create a Profile\"}\n          </Typography> */}\n          <TextField\n            name=\"name\"\n            variant=\"outlined\"\n            label=\"Name\"\n            fullWidth\n            value={postData.name}\n            onChange={(e) => setPostData({ ...postData, name: e.target.value })}\n          />\n          <TextField\n            name=\"dob\"\n            variant=\"outlined\"\n            label=\"Date of Birth\"\n            fullWidth\n            value={postData.dob}\n            onChange={(e) => setPostData({ ...postData, dob: e.target.value })}\n          />\n          <TextField\n            name=\"location\"\n            variant=\"outlined\"\n            label=\"Location\"\n            fullWidth\n            value={postData.location}\n            onChange={(e) =>\n              setPostData({ ...postData, location: e.target.value })\n            }\n          />\n          <TextField\n            name=\"team\"\n            variant=\"outlined\"\n            label=\"Team\"\n            fullWidth\n            value={postData.team}\n            onChange={(e) => setPostData({ ...postData, team: e.target.value })}\n          />\n        </form>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          type=\"submit\"\n        >\n          Continue\n        </Button>\n      </Paper>\n      {/* <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n          <Form onSubmit={submitFormData}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                name=\"firstName\"\n                defaultValue={values.firstName}\n                type=\"text\"\n                placeholder=\"First Name\"\n                onChange={handleFormData(\"firstName\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                name=\"lastName\"\n                defaultValue={values.lastName}\n                type=\"text\"\n                placeholder=\"Last Name\"\n                onChange={handleFormData(\"lastName\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Continue\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card> */}\n    </div>\n  );\n};\n\nexport default StepOne;\n"]},"metadata":{},"sourceType":"module"}
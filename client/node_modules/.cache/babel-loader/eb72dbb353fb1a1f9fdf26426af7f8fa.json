{"ast":null,"code":"var _jsxFileName = \"/Users/princeshakti/Desktop/project_mern_memories-PART_1_and_2/client/src/components/Form/StepOne.js\";\nimport React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport validator from \"validator\"; // creating functional component ans getting props from app.js and destucturing them\n\nconst StepOne = ({\n  nextStep,\n  handleFormData,\n  values\n}) => {\n  //creating error state for validation\n  const [error, setError] = useState(false); // after form submit validating the form data using validator\n\n  const submitFormData = e => {\n    e.preventDefault(); // checking if value of first name and last name is empty show error else take to step 2\n\n    if (validator.isEmpty(values.firstName) || validator.isEmpty(values.lastName)) {\n      setError(true);\n    } else {\n      nextStep();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, currentId ? `Editing \"${post.name}\"` : \"Create a Profile\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    variant: \"outlined\",\n    label: \"Name\",\n    fullWidth: true,\n    value: postData.name,\n    onChange: e => setPostData({ ...postData,\n      name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      marginTop: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitFormData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    style: {\n      border: error ? \"2px solid red\" : \"\"\n    },\n    name: \"firstName\",\n    defaultValue: values.firstName,\n    type: \"text\",\n    placeholder: \"First Name\",\n    onChange: handleFormData(\"firstName\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), error ? /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"This is a required field\") : \"\"), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    style: {\n      border: error ? \"2px solid red\" : \"\"\n    },\n    name: \"lastName\",\n    defaultValue: values.lastName,\n    type: \"text\",\n    placeholder: \"Last Name\",\n    onChange: handleFormData(\"lastName\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }), error ? /*#__PURE__*/React.createElement(Form.Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"This is a required field\") : \"\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Continue\")))));\n};\n\nexport default StepOne;","map":{"version":3,"sources":["/Users/princeshakti/Desktop/project_mern_memories-PART_1_and_2/client/src/components/Form/StepOne.js"],"names":["React","useState","TextField","Button","Typography","Paper","validator","StepOne","nextStep","handleFormData","values","error","setError","submitFormData","e","preventDefault","isEmpty","firstName","lastName","classes","paper","root","form","handleSubmit","currentId","post","name","postData","setPostData","target","value","marginTop","border","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport validator from \"validator\";\n\n// creating functional component ans getting props from app.js and destucturing them\nconst StepOne = ({ nextStep, handleFormData, values }) => {\n  //creating error state for validation\n  const [error, setError] = useState(false);\n\n  // after form submit validating the form data using validator\n  const submitFormData = (e) => {\n    e.preventDefault();\n\n    // checking if value of first name and last name is empty show error else take to step 2\n    if (\n      validator.isEmpty(values.firstName) ||\n      validator.isEmpty(values.lastName)\n    ) {\n      setError(true);\n    } else {\n      nextStep();\n    }\n  };\n\n  return (\n    <div>\n      <Paper className={classes.paper}>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          className={`${classes.root} ${classes.form}`}\n          onSubmit={handleSubmit}\n        >\n          <Typography variant=\"h6\">\n            {currentId ? `Editing \"${post.name}\"` : \"Create a Profile\"}\n          </Typography>\n          <TextField\n            name=\"name\"\n            variant=\"outlined\"\n            label=\"Name\"\n            fullWidth\n            value={postData.name}\n            onChange={(e) => setPostData({ ...postData, name: e.target.value })}\n          />\n        </form>\n      </Paper>\n      <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n          <Form onSubmit={submitFormData}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                name=\"firstName\"\n                defaultValue={values.firstName}\n                type=\"text\"\n                placeholder=\"First Name\"\n                onChange={handleFormData(\"firstName\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                name=\"lastName\"\n                defaultValue={values.lastName}\n                type=\"text\"\n                placeholder=\"Last Name\"\n                onChange={handleFormData(\"lastName\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Continue\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default StepOne;\n"]},"metadata":{},"sourceType":"module"}
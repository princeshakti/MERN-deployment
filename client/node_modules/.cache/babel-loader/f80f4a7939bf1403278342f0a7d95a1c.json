{"ast":null,"code":"var _jsxFileName = \"/Users/princeshakti/Desktop/project_mern_memories-PART_1_and_2/client/src/components/Form/StepOne.js\";\nimport React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport useStyles from \"./styles\"; // creating functional component ans getting props from app.js and destucturing them\n\nconst StepOne = ({\n  nextStep\n}) => {\n  //creating error state for validation\n  const classes = useStyles(); // after form submit validating the form data using validator\n\n  const submitFormData = e => {\n    e.preventDefault(); // checking if value of first name and last name is empty show error else take to step 2\n\n    nextStep();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: submitFormData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, currentId ? `Editing \"${post.name}\"` : \"Create a Profile\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"name\",\n    variant: \"outlined\",\n    label: \"Name\",\n    fullWidth: true,\n    value: postData.name,\n    onChange: e => setPostData({ ...postData,\n      name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default StepOne;","map":{"version":3,"sources":["/Users/princeshakti/Desktop/project_mern_memories-PART_1_and_2/client/src/components/Form/StepOne.js"],"names":["React","useState","TextField","Button","Typography","Paper","useStyles","StepOne","nextStep","classes","submitFormData","e","preventDefault","paper","root","form","currentId","post","name","postData","setPostData","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,KAAxC,QAAqD,mBAArD;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CACA;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChC;AACA,QAAMC,OAAO,GAAGH,SAAS,EAAzB,CAFgC,CAGhC;;AACA,QAAMI,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF,GAD4B,CAG5B;;AAEAJ,IAAAA,QAAQ;AACT,GAND;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEC,OAAO,CAACI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,YAAY,EAAC,KADf;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,SAAS,EAAG,GAAEJ,OAAO,CAACK,IAAK,IAAGL,OAAO,CAACM,IAAK,EAH7C;AAIE,IAAA,QAAQ,EAAEL,cAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,SAAS,GAAI,YAAWC,IAAI,CAACC,IAAK,GAAzB,GAA8B,kBAD1C,CANF,eASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,KAAK,EAAEC,QAAQ,CAACD,IALlB;AAME,IAAA,QAAQ,EAAGP,CAAD,IAAOS,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeD,MAAAA,IAAI,EAAEP,CAAC,CAACU,MAAF,CAASC;AAA9B,KAAD,CAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF,CADF;AAqED,CAjFD;;AAmFA,eAAef,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\n// creating functional component ans getting props from app.js and destucturing them\nconst StepOne = ({ nextStep }) => {\n  //creating error state for validation\n  const classes = useStyles();\n  // after form submit validating the form data using validator\n  const submitFormData = (e) => {\n    e.preventDefault();\n\n    // checking if value of first name and last name is empty show error else take to step 2\n\n    nextStep();\n  };\n\n  return (\n    <div>\n      <Paper className={classes.paper}>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          className={`${classes.root} ${classes.form}`}\n          onSubmit={submitFormData}\n        >\n          <Typography variant=\"h6\">\n            {currentId ? `Editing \"${post.name}\"` : \"Create a Profile\"}\n          </Typography>\n          <TextField\n            name=\"name\"\n            variant=\"outlined\"\n            label=\"Name\"\n            fullWidth\n            value={postData.name}\n            onChange={(e) => setPostData({ ...postData, name: e.target.value })}\n          />\n        </form>\n      </Paper>\n      {/* <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n          <Form onSubmit={submitFormData}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                name=\"firstName\"\n                defaultValue={values.firstName}\n                type=\"text\"\n                placeholder=\"First Name\"\n                onChange={handleFormData(\"firstName\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                name=\"lastName\"\n                defaultValue={values.lastName}\n                type=\"text\"\n                placeholder=\"Last Name\"\n                onChange={handleFormData(\"lastName\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Continue\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card> */}\n    </div>\n  );\n};\n\nexport default StepOne;\n"]},"metadata":{},"sourceType":"module"}
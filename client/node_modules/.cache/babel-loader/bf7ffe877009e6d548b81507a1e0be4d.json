{"ast":null,"code":"var _jsxFileName = \"/Users/princeshakti/Desktop/project_mern_memories-PART_1_and_2/client/src/components/Form/Final.js\";\nimport React, { useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from \"./styles\"; // creating functional component ans getting props from app.js and destucturing them\n\nconst StepOne = ({\n  postData,\n  setPostData,\n  prevStep,\n  currentId\n}) => {\n  //creating error state for validation\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]); // after form submit validating the form data using validator\n\n  const submitFormData = e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    } // checking if value of first name and last name is empty show error else take to step 2\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"about\",\n    variant: \"outlined\",\n    label: \"About\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.about,\n    onChange: e => setPostData({ ...postData,\n      about: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"interests\",\n    variant: \"outlined\",\n    label: \"Interest\",\n    fullWidth: true,\n    value: postData.interests,\n    onChange: e => setPostData({ ...postData,\n      interests: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"profileimg\",\n    variant: \"outlined\",\n    label: \"Profile Image\",\n    fullWidth: true,\n    value: postData.profileimg,\n    onChange: e => setPostData({ ...postData,\n      profileimg: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    type: \"submit\",\n    onClick: prevStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    type: \"submit\",\n    onClick: submitFormData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default StepOne;","map":{"version":3,"sources":["/Users/princeshakti/Desktop/project_mern_memories-PART_1_and_2/client/src/components/Form/Final.js"],"names":["React","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","useStyles","StepOne","postData","setPostData","prevStep","currentId","post","state","posts","find","message","_id","dispatch","classes","submitFormData","e","preventDefault","createPost","clear","updatePost","paper","root","form","about","target","value","interests","profileimg","display","justifyContent","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from \"./styles\";\n// creating functional component ans getting props from app.js and destucturing them\nconst StepOne = ({ postData, setPostData, prevStep, currentId }) => {\n  //creating error state for validation\n\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((message) => message._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  // after form submit validating the form data using validator\n  const submitFormData = (e) => {\n    e.preventDefault();\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n    // checking if value of first name and last name is empty show error else take to step 2\n  };\n\n  return (\n    <div>\n      <Paper className={classes.paper}>\n        <form\n          autoComplete=\"off\"\n          noValidate\n          className={`${classes.root} ${classes.form}`}\n        >\n          <TextField\n            name=\"about\"\n            variant=\"outlined\"\n            label=\"About\"\n            fullWidth\n            multiline\n            rows={4}\n            value={postData.about}\n            onChange={(e) =>\n              setPostData({ ...postData, about: e.target.value })\n            }\n          />\n          <TextField\n            name=\"interests\"\n            variant=\"outlined\"\n            label=\"Interest\"\n            fullWidth\n            value={postData.interests}\n            onChange={(e) =>\n              setPostData({ ...postData, interests: e.target.value })\n            }\n          />\n\n          <TextField\n            name=\"profileimg\"\n            variant=\"outlined\"\n            label=\"Profile Image\"\n            fullWidth\n            value={postData.profileimg}\n            onChange={(e) =>\n              setPostData({ ...postData, profileimg: e.target.value })\n            }\n          />\n        </form>\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n          <Button\n            className={classes.buttonSubmit}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            type=\"submit\"\n            onClick={prevStep}\n          >\n            Previous\n          </Button>\n          <Button\n            className={classes.buttonSubmit}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            type=\"submit\"\n            onClick={submitFormData}\n          >\n            Submit\n          </Button>\n        </div>\n      </Paper>\n      {/* <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n          <Form onSubmit={submitFormData}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                name=\"firstName\"\n                defaultValue={values.firstName}\n                type=\"text\"\n                placeholder=\"First Name\"\n                onChange={handleFormData(\"firstName\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                name=\"lastName\"\n                defaultValue={values.lastName}\n                type=\"text\"\n                placeholder=\"Last Name\"\n                onChange={handleFormData(\"lastName\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Continue\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card> */}\n    </div>\n  );\n};\n\nexport default StepOne;\n"]},"metadata":{},"sourceType":"module"}